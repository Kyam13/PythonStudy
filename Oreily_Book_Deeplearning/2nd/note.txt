パーセプトロンについて
  パーセプトロンがニューラルネットワークの起源となるアルゴリズム

パーセプトロンとは
  複数の信号を入力として、受け取り１つの信号を出力
  (信号・・・電流や川のような流れを持つものをイメージ)
  信号は流す/流さない(1/0)かだけ
  x1 w1
      > y
  x2 w2
  x1,x2は入力　yは出力　w1,w2は重み
  入力と出力は○で囲まれていて、ニューロンやノードと呼ぶ

    {0 w1x1+w2x2 <=θ}
  y={1 w1x1+w2x2 > θ}　θー＞閾値と呼ぶ
  閾値を超えた場合
    ニューロンが発火する
  という
  各信号にかかる重みが大きければ大きいほど対応する信号の重要性が高い

単純な論理回路をパーセプトロンで実装
  ANDゲート
    ２入力の１出力
    この形の真理値表から重みと閾値を設定しみる。
  NANDゲート
    ANDのときの重みと閾値が反転しているだけ
  ORゲート
    閾値を０に設定
    あと重みは正

パーセプトロンの実装
def AND(x1,x2):
    w1,w2,theta=0.5,0.5,0.7
    tmp=x1*w1+x2*w2
    if tmp<=theta:
        return 0
    elif tmp>theta:
        return 1
ANDで考えた

重みとバイアスの導入
    バイアスは閾値を左辺に持ってきてθー＞bにしたもの
    {0 b+w1x1+w2x2 <=0}
  y={1 b+w1x1+w2x2 > 0}

重みとバイアスによるパーセプトロンの実装
def bAND(x1,x2):
    w1,w2,theta=0.5,0.5,0.7
    b=-0.7
    tmp=b+x1*w1+x2*w2
    if tmp<=0:
        return 0
    else:
        return 1

パーセプトロンの限界：
  これはtmpを１つの公式と考えると、直線であると考えれるが今まではそれでカバーできた
  しかし直線のみでoutputは決まらない
  xorがその１つの例なのである。

図で表して、出力領域が直線で表すことができるのが線形な領域
                  曲線で表すことができるのは非線形な領域

パーセプトロンにおいて、層を重ねて多層にできるのが素晴らしい
実際多層パーセプトロンでxorは表現することができる

既存のゲートを組み合わせることによってxorはできる
///以下がxorのプログラムである。
def XOR(x1,x2):
    s1=NAND(x1,x2)
    s2=OR(x1,x2)
    y=AND(s1,s2)
    return y

xorのパーセプトロンによる表記
x1 s1
  x  > y
x2 s1
0  1   2 (層)

０-1は部品に手を加え作業を行う
1-2は"           完了させる

NANDゲートのみでコンピュータが行う処理を再現することができる
  コンピュータシステムの理論と実装ーーーモダンなコンピュータの作り方に詳細が乗っている模様です
  その本では、NANDからテトリスが動くコンピュータが作成できるみたい

まとめ
  パーセプトロンは非常にシンプルなアルゴリズム。ある入力を与えたら決まった値が出力される
  重みとバイアスをパラメータとして扱う
  ANDやORなどの論理回路をひょうげんできる
  XORは２層パーセプトロんで表現できる
  線形領域ー＞単層パーセプトロン
  非線形領域ー＞多層パーセプトロン
  多層パーセプトロンはコンピュータを表現できる
